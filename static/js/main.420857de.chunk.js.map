{"version":3,"sources":["components/WhatToWatch/WhatToWatch.jsx","panels/Welcome.js","panels/Movie.js","utils/request.js","services/movieService.js","services/postService.js","App.js","index.js"],"names":["WhatToWatchButton","onFindMovie","moving","useState","processing","state","setState","className","cx","button","onClick","viewBox","points","WelcomePanel","movie","MovieView","Title","Poster","Plot","Actors","Rated","Runtime","Genre","imdbRating","style","backgroundImage","backgroundSize","width","height","color","urls","movies","api","omdb","request","method","url","endpoint","a","async","params","computedUrl","axios","data","console","log","MovieService","BlogService","prefetchData","connect","subscribe","movieService","blogService","fetchMovies","fetchPosts","posts","sendPromise","user","App","activeView","setActiveView","setUser","setMovie","setPosts","useEffect","prefetch","header","activePanel","id","Welcome","setTimeout","send","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.420857de.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport \"./WhatToWatch.css\";\n\nconst WhatToWatchButton = ({ onFindMovie, moving }) => {\n  const [state, setState] = useState({\n    processing: false\n  });\n\n  const animate = () => {\n    setState({\n      processing: true\n    });\n    onFindMovie();\n  };\n\n  return (\n    <div className=\"movie-block\">\n      <div className=\"movie-button\">\n        <button\n          className={cx({\n            button: true,\n            processing: state.processing,\n            \"element-move-top\": moving\n          })}\n          onClick={animate}\n        >\n          <span>Что глянуть?</span>\n          <svg viewBox=\"0 0 15 13\">\n            <polyline points=\"2 6.5 6 10.5 13 2.5\"></polyline>\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default WhatToWatchButton;\n","import React from \"react\";\nimport WhatToWatch from \"./../components/WhatToWatch/WhatToWatch\";\nimport \"./styles.css\";\n\nconst WelcomePanel = ({ onFindMovie, movie }) => (\n  <div className=\"welcome_panel\">\n    <WhatToWatch onFindMovie={onFindMovie} movie={movie} />\n  </div>\n);\n\nexport default WelcomePanel;\n","import React from \"react\";\nimport Icon24ShareExternal from \"@vkontakte/icons/dist/24/share_external\";\nimport Icon16LikeOutline from \"@vkontakte/icons/dist/16/like_outline\";\nimport Icon24CommentOutline from \"@vkontakte/icons/dist/24/comment_outline\";\nimport Icon28FavoriteOutline from \"@vkontakte/icons/dist/28/favorite_outline\";\n\nimport \"./Movie.css\";\n\nconst MovieView = ({\n  movie: { Title, Poster, Plot, Actors, Rated, Runtime, Genre, imdbRating }\n}) => {\n  return (\n    <div className=\"wrap\">\n      <div className=\"cellphone-container\">\n        <div className=\"movie\">\n          <div\n            className=\"movie-img\"\n            style={{\n              backgroundImage: `url(${Poster})`,\n              backgroundSize: \"cover\"\n            }}\n          ></div>\n          <div className=\"text-movie-cont\">\n            <div className=\"mr-grid\">\n              <div className=\"col1\">\n                <h2>{Title}</h2>\n                <ul className=\"movie-gen\">\n                  <li>{Rated} /</li>\n                  <li>{Runtime} /</li>\n                  <li>{Genre}</li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"mr-grid summary-row\">\n              <div className=\"col2\">\n                <h5>SUMMARY</h5>\n              </div>\n              <div className=\"col2\">\n                <ul className=\"movie-likes\">\n                  <li>\n                    <Icon28FavoriteOutline width={20} height={20} />\n                    {imdbRating}\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"mr-grid\">\n              <div className=\"col1\">\n                <p className=\"movie-description\">{Plot}</p>\n              </div>\n            </div>\n            <div className=\"mr-grid actors-row\">\n              <div className=\"col1\">\n                <p className=\"movie-actors\">{Actors}</p>\n              </div>\n            </div>\n            <div className=\"mr-grid action-row\">\n              <div className=\"col6 action-btn\">\n                <Icon24CommentOutline\n                  width={30}\n                  height={30}\n                  style={{ color: \"#fe4141\" }}\n                />\n              </div>\n              <div className=\"col6 action-btn\">\n                <Icon16LikeOutline\n                  width={30}\n                  height={30}\n                  style={{ color: \"#fe4141\" }}\n                />\n              </div>\n              <div className=\"col6 action-btn\">\n                <Icon24ShareExternal\n                  width={30}\n                  height={30}\n                  style={{ color: \"#fe4141\" }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieView;\n","import axios from \"axios\";\n\nconst urls = {\n  movies: \"https://api.themoviedb.org\",\n  api: \"https://movie.incodewetrust.dev\",\n  omdb: \"https://www.omdbapi.com\"\n};\n\n// http://www.omdbapi.com/?i=tt3896198&apikey=f5f111a3\n\n// const API_KEY = \"ca7b0635ffccf1dfb0cd5e2673609810\";\nconst API_KEY = \"f5f111a3\";\nexport const request = async (method, url, endpoint, params = {}) => {\n  try {\n    const computedUrl = endpoint === \"omdb\" ? `${url}&apikey=${API_KEY}` : url;\n    const { data } = await axios({\n      url: `${urls[endpoint]}/${computedUrl}`,\n      method,\n      data: params\n    });\n    console.log(\"DATA\", url, data);\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n","import { request } from \"./../utils/request\";\n\nexport default class MovieService {\n  async fetchMovies() {\n    try {\n      const data = await request(\"get\", \"?i=tt3896198\", \"omdb\", {});\n      return data;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n","import { request } from \"./../utils/request\";\n\nexport default class BlogService {\n  async fetchPosts() {\n    try {\n      const data = await request(\"get\", \"posts\", \"api\");\n      return data;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport connect from \"@vkontakte/vk-connect\";\nimport { View, Root, Panel } from \"@vkontakte/vkui\";\nimport Welcome from \"./panels/Welcome\";\nimport MovieCard from \"./panels/Movie\";\n\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport \"./styles/global.css\";\n\n// Api Calls\nimport MovieService from \"./services/movieService\";\nimport BlogService from \"./services/postService\";\n\nconst prefetchData = async () => {\n  connect.subscribe(() => {});\n  const movieService = new MovieService();\n  const blogService = new BlogService();\n  const movie = await movieService.fetchMovies();\n  const posts = await blogService.fetchPosts();\n\n  const user = await connect.sendPromise(\"VKWebAppGetUserInfo\");\n  return {\n    movie: movie,\n    user,\n    posts\n  };\n};\n\nconst App = () => {\n  const [activeView, setActiveView] = useState(\"welcome\");\n  const [fetchedUser, setUser] = useState(null);\n  const [movie, setMovie] = useState(null);\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => {\n    const prefetch = async () => {\n      const { movie, user, posts } = await prefetchData();\n      setUser(user);\n      setMovie(movie);\n      setPosts(posts);\n    };\n    prefetch();\n  }, []);\n\n  const handleFindMovie = () => {\n    setTimeout(() => {\n      setActiveView(\"movie\");\n    }, 3000);\n  };\n\n  return (\n    <Root activeView={activeView}>\n      <View header={false} activePanel=\"welcome_panel\" id=\"welcome\">\n        <Panel id=\"welcome_panel\">\n          <Welcome onFindMovie={handleFindMovie} />\n        </Panel>\n      </View>\n      <View header={false} activePanel=\"movie_panel\" id=\"movie\">\n        <Panel id=\"movie_panel\">\n          <MovieCard movie={movie} />\n        </Panel>\n      </View>\n    </Root>\n  );\n};\n\nexport default App;\n\n// <Home id=\"home\" fetchedUser={fetchedUser} movies={movies} posts={posts} />\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport connect from \"@vkontakte/vk-connect\";\nimport App from \"./App\";\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send(\"VKWebAppInit\", {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}