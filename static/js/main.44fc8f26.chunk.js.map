{"version":3,"sources":["utils/request.js","services/movieService.js","services/userService.js","services/vkService.js","utils/prefetchData.js","components/WhatToWatch/WhatToWatch.jsx","panels/Welcome.js","panels/Movie.js","App.js","index.js","utils/urlParams.js"],"names":["urls","movies","api","omdb","request","method","url","endpoint","a","async","params","computedUrl","axios","data","MovieService","movieId","userId","localStorage","getItem","profile","movie","like","setItem","_id","favId","fav","id","propOr","head","isEmpty","favs","connect","subscribe","e","console","log","BlogService","this","getProfile","sendPromise","user","pick","createdUser","JSON","stringify","send","images","VkService","link","movieService","userService","UserService","vkService","prefetchData","getUserFromVk","fetchMovies","handleLike","checkIsFav","isFav","showImage","img","handleUnLike","unlike","result","onMovieShare","handleFetchMovie","fetchMovie","isFavorite","WhatToWatchButton","onFindMovie","moving","useState","processing","state","setState","className","cx","button","onClick","viewBox","points","WelcomePanel","MovieView","Title","Poster","Plot","Actors","Rated","Runtime","Genre","imdbRating","goBack","onLike","onUnLike","style","backgroundImage","backgroundSize","width","height","split","color","size","level","App","view","activeView","setActiveView","setUser","setMovie","useEffect","setMovieOnInit","prefetch","fetchedMovie","likeHandler","header","activePanel","randomMovieId","Math","floor","random","length","randomMovie","setTimeout","backgroundColor","props","urlString","search","window","location","hash","replace","reduce","prev","curr","key","value","decodeURIComponent","getObjectUrlString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44fc8f26.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst urls = {\n  movies: \"https://api.themoviedb.org\",\n  api: \"https://movie.incodewetrust.dev\",\n  omdb: \"https://www.omdbapi.com\"\n};\n\n// http://www.omdbapi.com/?i=tt3896198&apikey=f5f111a3\n\n// const API_KEY = \"ca7b0635ffccf1dfb0cd5e2673609810\";\nconst API_KEY = \"f5f111a3\";\nexport const request = async (method, url, endpoint, params = {}) => {\n  try {\n    const computedUrl = endpoint === \"omdb\" ? `${url}&apikey=${API_KEY}` : url;\n    const { data } = await axios({\n      url: `${urls[endpoint]}/${computedUrl}`,\n      method,\n      data: params\n    });\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n","import { request } from \"./../utils/request\";\nimport { isEmpty, head, propOr } from \"ramda\";\n\nexport default class MovieService {\n  async fetchMovie(movieId) {\n    try {\n      const data = await request(\"get\", `movies/${movieId}`, \"api\");\n      return data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async fetchMovies() {\n    try {\n      const data = await request(\"get\", \"movies\", \"api\", {});\n      return data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async like(movieId) {\n    try {\n      const userId = localStorage.getItem(\"dbId\");\n      const like = await request(\"post\", \"favorites\", \"api\", {\n        profile: userId,\n        movie: movieId\n      });\n      localStorage.setItem(\"favId\", like._id);\n      return like;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async unlike() {\n    try {\n      const favId = localStorage.getItem(\"favId\");\n      const like = await request(\"delete\", `favorites/${favId}`, \"api\");\n      return like;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async checkIsFav(movieId) {\n    try {\n      const userId = localStorage.getItem(\"dbId\");\n      const fav = await request(\n        \"get\",\n        `favorites?movie=${movieId}&profile=${userId}`,\n        \"api\"\n      );\n      const id = propOr(null, \"id\")(head(fav));\n      localStorage.setItem(\"favId\", id);\n      return !isEmpty(fav);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async fetchFavs(userId) {\n    try {\n      const favs = await request(\"get\", `favorites?profile=${userId}`, \"api\");\n      return favs;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n","import { request } from \"./../utils/request\";\nimport { pick } from \"ramda\";\nimport connect from \"@vkontakte/vk-connect\";\nconnect.subscribe(e => console.log(e, \"STATER\"));\n\nexport default class BlogService {\n  async getUserFromVk() {\n    try {\n      const userId = localStorage.getItem(\"userId\");\n      if (userId) {\n        const profile = await this.getProfile(userId);\n        return profile;\n      }\n\n      const user = await connect.sendPromise(\"VKWebAppGetUserInfo\");\n      const profile = await this.getProfile(user.id);\n      if (profile) {\n        localStorage.setItem(\"userId\", user.id);\n        return profile;\n      }\n\n      const createdUser = await request(\"post\", \"profiles\", \"api\", {\n        ...pick([\"photo_max_orig\", \"first_name\", \"last_name\"], user),\n        userId: user.id\n      });\n\n      localStorage.setItem(\"dbId\", createdUser._id);\n      localStorage.setItem(\"user\", JSON.stringify(createdUser));\n\n      return createdUser;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getProfile(userId) {\n    const [profile = null] = await request(\n      \"get\",\n      `profiles/?userId=${userId}`,\n      \"api\"\n    );\n    localStorage.setItem(\"userId\", userId);\n    if (profile) {\n      localStorage.setItem(\"dbId\", profile._id);\n      localStorage.setItem(\"user\", JSON.stringify(profile));\n      return profile;\n    }\n    return null;\n  }\n\n  showImage(url) {\n    connect.send(\"VKWebAppShowImages\", {\n      images: [url]\n    });\n  }\n}\n","import connect from \"@vkontakte/vk-connect\";\nconnect.subscribe(e => console.log(e));\n\nexport default class VkService {\n  onMovieShare(movieId) {\n    console.log(movieId);\n    connect.send(\"VKWebAppShare\", {\n      link: `https://vk.com/app7273858#movieId=${movieId}&view=movie`\n    });\n  }\n}\n","// Api Calls\nimport MovieService from \"../services/movieService\";\nimport UserService from \"../services/userService\";\nimport VkService from \"../services/vkService\";\n\nconst movieService = new MovieService();\nconst userService = new UserService();\nconst vkService = new VkService();\n\nexport const prefetchData = async () => {\n  const user = await userService.getUserFromVk();\n\n  return {\n    user\n  };\n};\n\nexport const fetchMovies = async () => {\n  try {\n    const movies = await movieService.fetchMovies();\n    return movies;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const handleLike = async movieId => {\n  try {\n    const like = await movieService.like(movieId);\n    return like;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const checkIsFav = async movieId => {\n  try {\n    const isFav = await movieService.checkIsFav(movieId);\n    return isFav;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const showImage = img => userService.showImage(img);\n\nexport const handleUnLike = async () => {\n  try {\n    const result = await movieService.unlike();\n    return result;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const onMovieShare = movieId => vkService.onMovieShare(movieId);\n\nexport const handleFetchMovie = async movieId => {\n  try {\n    const movie = await movieService.fetchMovie(movieId);\n    const isFavorite = await movieService.checkIsFav(movieId);\n    return {\n      ...movie,\n      isFavorite\n    };\n  } catch (err) {\n    throw err;\n  }\n};\n","import React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport \"./WhatToWatch.css\";\n\nconst WhatToWatchButton = ({ onFindMovie, moving }) => {\n  const [state, setState] = useState({\n    processing: false\n  });\n\n  const animate = () => {\n    setState({\n      processing: true\n    });\n    onFindMovie();\n  };\n\n  return (\n    <div className=\"movie-block\">\n      <div className=\"movie-button\">\n        <button\n          className={cx({\n            button: true,\n            processing: state.processing,\n            \"element-move-top\": moving\n          })}\n          onClick={animate}\n        >\n          <span>Что глянуть?</span>\n          <svg viewBox=\"0 0 15 13\">\n            <polyline points=\"2 6.5 6 10.5 13 2.5\"></polyline>\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default WhatToWatchButton;\n","import React from \"react\";\nimport WhatToWatch from \"./../components/WhatToWatch/WhatToWatch\";\nimport \"./Welcome.css\";\n\nconst WelcomePanel = ({ onFindMovie, movie }) => (\n  <div className=\"welcome_panel\">\n    <WhatToWatch onFindMovie={onFindMovie} movie={movie} />\n  </div>\n);\n\nexport default WelcomePanel;\n","import React from \"react\";\nimport { Button } from \"@vkontakte/vkui\";\nimport Icon24ShareExternal from \"@vkontakte/icons/dist/24/share_external\";\nimport Icon16LikeOutline from \"@vkontakte/icons/dist/16/like_outline\";\nimport Icon16Like from \"@vkontakte/icons/dist/16/like\";\nimport Icon28FavoriteOutline from \"@vkontakte/icons/dist/28/favorite_outline\";\n\nimport \"./Movie.css\";\n\nconst MovieView = ({\n  movie: {\n    Title,\n    Poster,\n    Plot,\n    Actors,\n    Rated,\n    Runtime,\n    Genre,\n    imdbRating,\n    isFavorite,\n    _id\n  },\n  goBack,\n  onLike,\n  showImage,\n  onUnLike,\n  onMovieShare\n}) => {\n  return (\n    <div className=\"wrap\">\n      <div className=\"cellphone-container\">\n        <div className=\"movie\">\n          <div\n            onClick={() => showImage(Poster)}\n            className=\"movie-img\"\n            style={{\n              backgroundImage: `url(${Poster})`,\n              backgroundSize: \"cover\"\n            }}\n          ></div>\n          <div className=\"text-movie-cont\">\n            <div className=\"mr-grid\">\n              <div className=\"col1\">\n                <h2 className=\"title\">{Title}</h2>\n                <ul className=\"movie-gen\">\n                  <li>{Rated} /</li>\n                  <li>{Runtime} /</li>\n                  <li>{Genre}</li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"mr-grid summary-row\">\n              <div className=\"col2\">\n                <h3>Описание:</h3>\n              </div>\n              <div className=\"col2\">\n                <div className=\"movie-likes\">\n                  <Icon28FavoriteOutline width={20} height={20} />\n                  <span>{imdbRating}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"mr-grid\">\n              <div className=\"col1\">\n                <p className=\"movie-description\">{Plot}</p>\n              </div>\n            </div>\n            <div className=\"mr-grid actors-row\">\n              <div className=\"col1\">\n                <p className=\"movie-actors\">{Actors.split(\"...\")[0]}</p>\n              </div>\n            </div>\n            <div className=\"mr-grid action-row\">\n              <div className=\"col6 action-btn\">\n                {!isFavorite ? (\n                  <Icon16LikeOutline\n                    width={30}\n                    height={30}\n                    style={{ color: \"#fe4141\" }}\n                    onClick={() => onLike(_id)}\n                  />\n                ) : (\n                  <Icon16Like\n                    width={30}\n                    height={30}\n                    style={{ color: \"#fe4141\" }}\n                    onClick={() => onUnLike()}\n                  />\n                )}\n              </div>\n              <div className=\"col6 action-btn\">\n                <Icon24ShareExternal\n                  width={30}\n                  height={30}\n                  style={{ color: \"#fe4141\" }}\n                  onClick={() => onMovieShare(_id)}\n                />\n              </div>\n            </div>\n            <div className=\"back-btn\">\n              <Button size=\"xl\" level=\"outline\" onClick={goBack}>\n                Назад\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieView;\n","import React, { useState, useEffect } from \"react\";\nimport { View, Root, Panel } from \"@vkontakte/vkui\";\nimport {\n  prefetchData,\n  handleLike,\n  fetchMovies,\n  checkIsFav,\n  showImage,\n  handleUnLike,\n  onMovieShare,\n  handleFetchMovie\n} from \"./utils/prefetchData\";\nimport Welcome from \"./panels/Welcome\";\nimport MovieCard from \"./panels/Movie\";\n\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport \"./styles/global.css\";\n\nconst App = ({ view = \"welcome\", movieId = null }) => {\n  const [activeView, setActiveView] = useState(view);\n  const [vkUser, setUser] = useState(null);\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const prefetch = async () => {\n      const { user } = await prefetchData();\n      setUser(user);\n    };\n\n    if (movieId) {\n      setMovieOnInit(movieId);\n    }\n    prefetch();\n  }, []);\n\n  const setMovieOnInit = async movieId => {\n    try {\n      const fetchedMovie = await handleFetchMovie(movieId);\n      setMovie({\n        ...fetchedMovie\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const handleFindMovie = async () => {\n    const movies = await fetchMovies();\n    const randomMovieId = Math.floor(Math.random() * movies.length);\n    const randomMovie = movies[randomMovieId];\n    const isFavorite = await checkIsFav(randomMovie._id);\n    setMovie({\n      ...randomMovie,\n      isFavorite\n    });\n    setTimeout(() => {\n      setActiveView(\"movie\");\n    }, 3000);\n  };\n\n  const likeHandler = async (movieId = null) => {\n    if (movieId) {\n      await handleLike(movieId);\n    } else {\n      await handleUnLike();\n    }\n    setMovie({\n      ...movie,\n      isFavorite: movieId ? true : false\n    });\n  };\n\n  return (\n    <Root activeView={activeView}>\n      <View header={false} activePanel=\"welcome_panel\" id=\"welcome\">\n        <Panel id=\"welcome_panel\">\n          <Welcome onFindMovie={handleFindMovie} />\n        </Panel>\n      </View>\n      <View header={false} activePanel=\"movie_panel\" id=\"movie\">\n        <Panel id=\"movie_panel\" style={{ backgroundColor: \"#1e1b26\" }}>\n          {movie && (\n            <MovieCard\n              movie={movie}\n              goBack={() => setActiveView(\"welcome\")}\n              showImage={showImage}\n              onLike={likeHandler}\n              onUnLike={likeHandler}\n              onMovieShare={onMovieShare}\n            />\n          )}\n        </Panel>\n      </View>\n    </Root>\n  );\n};\n\nexport default App;\n\n// <Home id=\"home\" fetchedUser={fetchedUser} movies={movies} posts={posts} />\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport { getObjectUrlString } from \"./utils/urlParams\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport connect from \"@vkontakte/vk-connect\";\nimport App from \"./App\";\n\nconnect.send(\"VKWebAppInit\", {});\n\nconst props = getObjectUrlString();\n\nReactDOM.render(<App {...props} />, document.getElementById(\"root\"));\n","const getLocationHash = () => window.location.hash.replace(\"#\", \"\");\n\nexport const getObjectUrlString = urlString => {\n  const search = getLocationHash(urlString);\n  const objectUrl =\n    search === \"\"\n      ? null\n      : search.split(\"&\").reduce((prev, curr) => {\n          const [key, value] = curr.split(\"=\");\n          prev[decodeURIComponent(key)] = decodeURIComponent(value);\n          return prev;\n        }, {});\n  return objectUrl;\n};\n"],"sourceRoot":""}