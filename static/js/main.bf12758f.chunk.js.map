{"version":3,"sources":["utils/request.js","utils/storageUtils.js","services/movieService.js","services/userService.js","services/vkService.js","utils/prefetchData.js","utils/urlParams.js","components/WhatToWatch/WhatToWatch.jsx","panels/Welcome.js","panels/Movie.js","App.js","index.js"],"names":["urls","movies","api","omdb","request","method","url","endpoint","a","async","params","computedUrl","axios","data","getKeyAsync","keys","connect","send","Promise","resolve","subscribe","detail","type","value","propOr","head","setKeyAsync","key","String","MovieService","movieId","userId","profile","movie","like","_id","favId","fav","id","isEmpty","favs","BlogService","sendPromise","user","this","getProfile","pick","createdUser","images","VkService","link","movieService","userService","UserService","vkService","prefetchData","getUserFromVk","fetchMovies","handleLike","checkIsFav","isFav","showImage","img","handleUnLike","unlike","result","onMovieShare","handleFetchMovie","fetchMovie","isFavorite","getObjectUrlString","urlString","search","window","location","hash","replace","split","reduce","prev","curr","decodeURIComponent","WhatToWatchButton","onFindMovie","loaded","useState","loading","state","setState","className","cx","activate","done","onClick","xlinkHref","xmlns","style","display","viewBox","cy","r","d","WelcomePanel","MovieView","Title","Poster","Plot","Actors","Rated","Runtime","Genre","imdbRating","goBack","onLike","onUnLike","backgroundImage","backgroundSize","width","height","color","size","level","App","activeView","setActiveView","setUser","setMovie","useEffect","view","setMovieOnInit","prefetch","fetchedMovie","likeHandler","header","activePanel","randomMovieId","Math","floor","random","length","randomMovie","setTimeout","backgroundColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf12758f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst urls = {\n  movies: \"https://api.themoviedb.org\",\n  api: \"https://movie.incodewetrust.dev\",\n  omdb: \"https://www.omdbapi.com\"\n};\n\n// http://www.omdbapi.com/?i=tt3896198&apikey=f5f111a3\n\n// const API_KEY = \"ca7b0635ffccf1dfb0cd5e2673609810\";\nconst API_KEY = \"f5f111a3\";\nexport const request = async (method, url, endpoint, params = {}) => {\n  try {\n    const computedUrl = endpoint === \"omdb\" ? `${url}&apikey=${API_KEY}` : url;\n    const { data } = await axios({\n      url: `${urls[endpoint]}/${computedUrl}`,\n      method,\n      data: params\n    });\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n","import { head, propOr } from \"ramda\";\nimport connect from \"@vkontakte/vk-connect\";\n\nexport const getKeyAsync = keys => {\n  connect.send(\"VKWebAppStorageGet\", {\n    keys: [keys]\n  });\n  return new Promise(resolve => {\n    connect.subscribe(({ detail = {} }) => {\n      if (detail.type === \"VKWebAppStorageGetResult\") {\n        const value = propOr(null, \"value\")(head(detail.data.keys));\n        resolve(value);\n      }\n    });\n  });\n};\n\nexport const setKeyAsync = (key, value) => {\n  connect.send(\"VKWebAppStorageSet\", {\n    key,\n    value: String(value)\n  });\n};\n","import { request } from \"./../utils/request\";\nimport { isEmpty, head, propOr } from \"ramda\";\nimport { getKeyAsync, setKeyAsync } from \"./../utils/storageUtils\";\n\nexport default class MovieService {\n  async fetchMovie(movieId) {\n    try {\n      const data = await request(\"get\", `movies/${movieId}`, \"api\");\n      return data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async fetchMovies() {\n    try {\n      const data = await request(\"get\", \"movies\", \"api\", {});\n      return data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async like(movieId) {\n    try {\n      const userId = await getKeyAsync([\"userId\"]);\n      const like = await request(\"post\", \"favorites\", \"api\", {\n        profile: userId,\n        movie: movieId\n      });\n      setKeyAsync(\"favId\", like._id);\n      return like;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async unlike() {\n    try {\n      const favId = await getKeyAsync([\"favId\"]);\n      const like = await request(\"delete\", `favorites/${favId}`, \"api\");\n      return like;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async checkIsFav(movieId) {\n    try {\n      const userId = await getKeyAsync([\"userId\"]);\n      const fav = await request(\n        \"get\",\n        `favorites?movie=${movieId}&profile=${userId}`,\n        \"api\"\n      );\n      const id = propOr(null, \"id\")(head(fav));\n      setKeyAsync(\"favId\", id);\n      return !isEmpty(fav);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async fetchFavs(userId) {\n    try {\n      const favs = await request(\"get\", `favorites?profile=${userId}`, \"api\");\n      return favs;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n","import { pick } from \"ramda\";\nimport connect from \"@vkontakte/vk-connect\";\nimport { request } from \"./../utils/request\";\nimport { setKeyAsync } from \"./../utils/storageUtils\";\n\nexport default class BlogService {\n  async getUserFromVk() {\n    try {\n      const user = await connect.sendPromise(\"VKWebAppGetUserInfo\");\n      const profile = await this.getProfile(user.id);\n      if (profile) {\n        return profile;\n      }\n\n      const createdUser = await request(\"post\", \"profiles\", \"api\", {\n        ...pick([\"photo_max_orig\", \"first_name\", \"last_name\"], user),\n        userId: String(user.id)\n      });\n      setKeyAsync(\"userId\", createdUser.id);\n\n      return createdUser;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getProfile(userId) {\n    const [profile = null] = await request(\n      \"get\",\n      `profiles/?userId=${userId}`,\n      \"api\"\n    );\n    if (profile) {\n      setKeyAsync(\"userId\", profile.id);\n      return profile;\n    }\n    return null;\n  }\n\n  showImage(url) {\n    connect.send(\"VKWebAppShowImages\", {\n      images: [url]\n    });\n  }\n}\n","import connect from \"@vkontakte/vk-connect\";\nconnect.subscribe(() => {});\n\nexport default class VkService {\n  onMovieShare(movieId) {\n    connect.send(\"VKWebAppShare\", {\n      link: `https://vk.com/app7273858#movieId=${movieId}&view=movie`\n    });\n  }\n}\n","// Api Calls\nimport MovieService from \"../services/movieService\";\nimport UserService from \"../services/userService\";\nimport VkService from \"../services/vkService\";\n\nconst movieService = new MovieService();\nconst userService = new UserService();\nconst vkService = new VkService();\n\nexport const prefetchData = async () => {\n  const user = await userService.getUserFromVk();\n\n  return {\n    user\n  };\n};\n\nexport const fetchMovies = async () => {\n  try {\n    const movies = await movieService.fetchMovies();\n    return movies;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const handleLike = async movieId => {\n  try {\n    const like = await movieService.like(movieId);\n    return like;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const checkIsFav = async movieId => {\n  try {\n    const isFav = await movieService.checkIsFav(movieId);\n    return isFav;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const showImage = img => userService.showImage(img);\n\nexport const handleUnLike = async () => {\n  try {\n    const result = await movieService.unlike();\n    return result;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const onMovieShare = movieId => vkService.onMovieShare(movieId);\n\nexport const handleFetchMovie = async movieId => {\n  try {\n    const movie = await movieService.fetchMovie(movieId);\n    const isFavorite = await movieService.checkIsFav(movieId);\n    return {\n      ...movie,\n      isFavorite\n    };\n  } catch (err) {\n    throw err;\n  }\n};\n","const getLocationHash = () => window.location.hash.replace(\"#\", \"\");\n\nexport const getObjectUrlString = urlString => {\n  const search = getLocationHash(urlString);\n  const objectUrl =\n    search === \"\"\n      ? {}\n      : search.split(\"&\").reduce((prev, curr) => {\n          const [key, value] = curr.split(\"=\");\n          prev[decodeURIComponent(key)] = decodeURIComponent(value);\n          return prev;\n        }, {});\n  return objectUrl;\n};\n","import React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport \"./WhatToWatch.css\";\n\nconst WhatToWatchButton = ({ onFindMovie, loaded }) => {\n  const [state, setState] = useState({\n    loading: false\n  });\n\n  const animate = () => {\n    setState({\n      loading: true\n    });\n    onFindMovie();\n  };\n\n  return (\n    <div className=\"movie-block\">\n      <div className=\"movie-button\">\n        <a\n          className={cx({\n            activate: true,\n            loading: state.loading,\n            done: loaded\n          })}\n          onClick={animate}\n        >\n          <span>\n            <svg>\n              <use xlinkHref=\"#circle\" />\n            </svg>\n            <svg>\n              <use xlinkHref=\"#arrow\" />\n            </svg>\n            <svg>\n              <use xlinkHref=\"#check\" />\n            </svg>\n          </span>\n          <ul>\n            <li>Посоветуй</li>\n            <li>Думаю</li>\n            <li>Нашел</li>\n          </ul>\n        </a>\n\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ display: \"none\" }}>\n          <symbol\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 16 16\"\n            id=\"circle\"\n          >\n            <circle cx=\"8\" cy=\"8\" r=\"7.5\" />\n          </symbol>\n          <symbol\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 12 12\"\n            id=\"arrow\"\n          >\n            <path d=\"M2.7008908,5.37931459 L2.7008908,5.37931459 C2.9224607,5.60207651 3.2826628,5.60304283 3.50542472,5.38147293 C3.52232305,5.36466502 3.53814843,5.34681177 3.55280728,5.32801875 L5.34805194,3.02646954 L5.34805194,10.3480519 C5.34805194,10.7081129 5.63993903,11 6,11 L6,11 C6.36006097,11 6.65194806,10.7081129 6.65194806,10.3480519 L6.65194806,3.02646954 L8.44719272,5.32801875 C8.6404327,5.57575732 8.99791646,5.61993715 9.24565503,5.42669716 C9.26444805,5.41203831 9.28230129,5.39621293 9.2991092,5.37931459 L9.2991092,5.37931459 C9.55605877,5.12098268 9.57132199,4.70855346 9.33416991,4.43193577 L6.75918715,1.42843795 C6.39972025,1.00915046 5.76841509,0.960656296 5.34912761,1.32012319 C5.31030645,1.35340566 5.27409532,1.38961679 5.24081285,1.42843795 L2.66583009,4.43193577 C2.42867801,4.70855346 2.44394123,5.12098268 2.7008908,5.37931459 Z\" />\n          </symbol>\n          <symbol\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 12 12\"\n            id=\"check\"\n          >\n            <path\n              id=\"test\"\n              d=\"M4.76499011,6.7673683 L8.2641848,3.26100386 C8.61147835,2.91299871 9.15190114,2.91299871 9.49919469,3.26100386 C9.51164115,3.27347582 9.52370806,3.28637357 9.53537662,3.29967699 C9.83511755,3.64141434 9.81891834,4.17816549 9.49919469,4.49854425 L5.18121271,8.82537365 C4.94885368,9.05820878 4.58112654,9.05820878 4.34876751,8.82537365 L2.50080531,6.97362503 C2.48835885,6.96115307 2.47629194,6.94825532 2.46462338,6.93495189 C2.16488245,6.59321455 2.18108166,6.0564634 2.50080531,5.73608464 C2.84809886,5.3880795 3.38852165,5.3880795 3.7358152,5.73608464 L4.76499011,6.7673683 Z\"\n            />\n          </symbol>\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default WhatToWatchButton;\n\n// <button\n// className={cx({\n//   button: true,\n//   processing: state.processing,\n//   \"element-move-top\": moving\n// })}\n// onClick={animate}\n// >\n// <span>Что глянуть?</span>\n// <svg viewBox=\"0 0 15 13\">\n//   <polyline points=\"2 6.5 6 10.5 13 2.5\"></polyline>\n// </svg>\n// </button>\n","import React from \"react\";\nimport WhatToWatch from \"./../components/WhatToWatch/WhatToWatch\";\nimport \"./Welcome.css\";\n\nconst WelcomePanel = ({ onFindMovie, loaded }) => (\n  <div className=\"welcome_panel\">\n    <WhatToWatch onFindMovie={onFindMovie} loaded={loaded} />\n  </div>\n);\n\nexport default WelcomePanel;\n","import React from \"react\";\nimport { Button } from \"@vkontakte/vkui\";\nimport Icon24ShareExternal from \"@vkontakte/icons/dist/24/share_external\";\nimport Icon16LikeOutline from \"@vkontakte/icons/dist/16/like_outline\";\nimport Icon16Like from \"@vkontakte/icons/dist/16/like\";\nimport Icon28FavoriteOutline from \"@vkontakte/icons/dist/28/favorite_outline\";\n\nimport \"./Movie.css\";\n\nconst MovieView = ({\n  movie: {\n    Title,\n    Poster,\n    Plot,\n    Actors,\n    Rated,\n    Runtime,\n    Genre,\n    imdbRating,\n    isFavorite,\n    _id\n  },\n  goBack,\n  onLike,\n  showImage,\n  onUnLike,\n  onMovieShare\n}) => {\n  return (\n    <div className=\"wrap\">\n      <div className=\"cellphone-container\">\n        <div className=\"movie\">\n          <div\n            onClick={() => showImage(Poster)}\n            className=\"movie-img\"\n            style={{\n              backgroundImage: `url(${Poster})`,\n              backgroundSize: \"cover\"\n            }}\n          ></div>\n          <div className=\"text-movie-cont\">\n            <div className=\"mr-grid\">\n              <div className=\"col1\">\n                <h2 className=\"title\">{Title}</h2>\n                <ul className=\"movie-gen\">\n                  <li>{Rated} /</li>\n                  <li>{Runtime} /</li>\n                  <li>{Genre}</li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"mr-grid summary-row\">\n              <div className=\"col2\">\n                <h3>Описание:</h3>\n              </div>\n              <div className=\"col2\">\n                <div className=\"movie-likes\">\n                  <Icon28FavoriteOutline width={20} height={20} />\n                  <span>{imdbRating}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"mr-grid\">\n              <div className=\"col1\">\n                <p className=\"movie-description\">{Plot}</p>\n              </div>\n            </div>\n            <div className=\"mr-grid actors-row\">\n              <div className=\"col1\">\n                <p className=\"movie-actors\">{Actors.split(\"...\")[0]}</p>\n              </div>\n            </div>\n            <div className=\"mr-grid action-row\">\n              <div className=\"col6 action-btn\">\n                {!isFavorite ? (\n                  <Icon16LikeOutline\n                    width={30}\n                    height={30}\n                    style={{ color: \"#fe4141\" }}\n                    onClick={() => onLike(_id)}\n                  />\n                ) : (\n                  <Icon16Like\n                    width={30}\n                    height={30}\n                    style={{ color: \"#fe4141\" }}\n                    onClick={() => onUnLike()}\n                  />\n                )}\n              </div>\n              <div className=\"col6 action-btn\">\n                <Icon24ShareExternal\n                  width={30}\n                  height={30}\n                  style={{ color: \"#fe4141\" }}\n                  onClick={() => onMovieShare(_id)}\n                />\n              </div>\n            </div>\n            <div className=\"back-btn\">\n              <Button size=\"xl\" level=\"outline\" onClick={goBack}>\n                Назад\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieView;\n","import React, { useState, useEffect } from \"react\";\nimport { View, Root, Panel } from \"@vkontakte/vkui\";\nimport {\n  prefetchData,\n  handleLike,\n  fetchMovies,\n  checkIsFav,\n  showImage,\n  handleUnLike,\n  onMovieShare,\n  handleFetchMovie\n} from \"./utils/prefetchData\";\nimport { getObjectUrlString } from \"./utils/urlParams\";\n\nimport Welcome from \"./panels/Welcome\";\nimport MovieCard from \"./panels/Movie\";\n\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport \"./styles/global.css\";\n\nconst App = () => {\n  const [state, setState] = useState({ loaded: false });\n  const [activeView, setActiveView] = useState(\"welcome\");\n  const [vkUser, setUser] = useState(null);\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const { view = \"welcome\", movieId = null } = getObjectUrlString();\n    const prefetch = async () => {\n      const { user } = await prefetchData();\n      setUser(user);\n    };\n\n    if (movieId) {\n      setActiveView(view);\n      setMovieOnInit(movieId);\n    }\n    prefetch();\n  }, []);\n\n  const setMovieOnInit = async movieId => {\n    try {\n      const fetchedMovie = await handleFetchMovie(movieId);\n      setMovie({\n        ...fetchedMovie\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const handleFindMovie = async () => {\n    setState({ loaded: false });\n    const movies = await fetchMovies();\n    const randomMovieId = Math.floor(Math.random() * movies.length);\n    const randomMovie = movies[randomMovieId];\n    const isFavorite = await checkIsFav(randomMovie._id);\n    setMovie({\n      ...randomMovie,\n      isFavorite\n    });\n    setTimeout(() => setState({ loaded: true }), 1300);\n    setTimeout(() => setActiveView(\"movie\"), 2000);\n  };\n\n  const likeHandler = async (movieId = null) => {\n    if (movieId) {\n      await handleLike(movieId);\n    } else {\n      await handleUnLike();\n    }\n    setMovie({\n      ...movie,\n      isFavorite: movieId ? true : false\n    });\n  };\n\n  return (\n    <Root activeView={activeView}>\n      <View header={false} activePanel=\"welcome_panel\" id=\"welcome\">\n        <Panel id=\"welcome_panel\">\n          <Welcome onFindMovie={handleFindMovie} loaded={state.loaded} />\n        </Panel>\n      </View>\n      <View header={false} activePanel=\"movie_panel\" id=\"movie\">\n        <Panel id=\"movie_panel\" style={{ backgroundColor: \"#1e1b26\" }}>\n          {movie && (\n            <MovieCard\n              movie={movie}\n              goBack={() => setActiveView(\"welcome\")}\n              showImage={showImage}\n              onLike={likeHandler}\n              onUnLike={likeHandler}\n              onMovieShare={onMovieShare}\n            />\n          )}\n        </Panel>\n      </View>\n    </Root>\n  );\n};\n\nexport default App;\n\n// <Home id=\"home\" fetchedUser={fetchedUser} movies={movies} posts={posts} />\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport connect from \"@vkontakte/vk-connect\";\nimport App from \"./App\";\n\nconnect.send(\"VKWebAppInit\", {});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}