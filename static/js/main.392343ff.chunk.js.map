{"version":3,"sources":["utils/request.js","services/movieService.js","services/userService.js","utils/prefetchData.js","components/WhatToWatch/WhatToWatch.jsx","panels/Welcome.js","panels/Movie.js","App.js","index.js"],"names":["urls","movies","api","omdb","request","method","url","endpoint","a","async","params","computedUrl","axios","data","MovieService","connect","subscribe","BlogService","userId","localStorage","getItem","this","getProfile","profile","fetchFavs","_id","sendPromise","user","id","setItem","pick","createdUser","JSON","stringify","movieId","movie","like","fav","isEmpty","favs","console","log","send","images","movieService","userService","UserService","prefetchData","getUserFromVk","fetchMovies","handleLike","checkIsFav","isFav","showImage","img","WhatToWatchButton","onFindMovie","moving","useState","processing","state","setState","className","cx","button","onClick","viewBox","points","WelcomePanel","MovieView","Title","Poster","Plot","Actors","Rated","Runtime","Genre","imdbRating","isFavorite","goBack","onLike","style","backgroundImage","backgroundSize","width","height","split","color","size","level","App","activeView","setActiveView","setUser","setMovie","useEffect","prefetch","header","activePanel","randomMovieId","Math","floor","random","length","randomMovie","setTimeout","backgroundColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.392343ff.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst urls = {\n  movies: \"https://api.themoviedb.org\",\n  api: \"https://movie.incodewetrust.dev\",\n  omdb: \"https://www.omdbapi.com\"\n};\n\n// http://www.omdbapi.com/?i=tt3896198&apikey=f5f111a3\n\n// const API_KEY = \"ca7b0635ffccf1dfb0cd5e2673609810\";\nconst API_KEY = \"f5f111a3\";\nexport const request = async (method, url, endpoint, params = {}) => {\n  try {\n    const computedUrl = endpoint === \"omdb\" ? `${url}&apikey=${API_KEY}` : url;\n    const { data } = await axios({\n      url: `${urls[endpoint]}/${computedUrl}`,\n      method,\n      data: params\n    });\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n","import { request } from \"./../utils/request\";\n\nexport default class MovieService {\n  async fetchMovies() {\n    try {\n      const data = await request(\"get\", \"movies\", \"api\", {});\n      return data;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n","import { request } from \"./../utils/request\";\nimport { pick, isEmpty } from \"ramda\";\nimport connect from \"@vkontakte/vk-connect\";\nconnect.subscribe(() => {});\n\nexport default class BlogService {\n  async getUserFromVk() {\n    try {\n      const userId = localStorage.getItem(\"userId\");\n      if (userId) {\n        const profile = await this.getProfile(userId);\n        this.fetchFavs(profile._id);\n        return profile;\n      }\n\n      const user = await connect.sendPromise(\"VKWebAppGetUserInfo\");\n      const profile = await this.getProfile(user.id);\n      if (profile) {\n        localStorage.setItem(\"userId\", user.id);\n        this.fetchFavs(profile._id);\n        return profile;\n      }\n\n      const createdUser = await request(\"post\", \"profiles\", \"api\", {\n        ...pick([\"photo_max_orig\", \"first_name\", \"last_name\"], user),\n        userId: user.id\n      });\n\n      localStorage.setItem(\"dbId\", createdUser._id);\n      localStorage.setItem(\"user\", JSON.stringify(createdUser));\n\n      this.fetchFavs(createdUser._id);\n\n      return createdUser;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async like(movieId) {\n    try {\n      const userId = localStorage.getItem(\"dbId\");\n      const like = await request(\"post\", \"favorites\", \"api\", {\n        profile: userId,\n        movie: movieId\n      });\n\n      return like;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async unlike(movieId) {\n    try {\n      const userId = localStorage.getItem(\"dbId\");\n      const like = await request(\"delete\", \"favorites\", \"api\", {\n        profile: userId,\n        movie: movieId\n      });\n\n      return like;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async checkIsFav(movieId) {\n    try {\n      const userId = localStorage.getItem(\"dbId\");\n      const fav = await request(\n        \"get\",\n        `favorites?movie=${movieId}&profile=${userId}`,\n        \"api\"\n      );\n      return !isEmpty(fav);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async fetchFavs(userId) {\n    try {\n      const favs = await request(\"get\", `favorites?profile=${userId}`, \"api\");\n      return favs;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getProfile(userId) {\n    const [profile = null] = await request(\n      \"get\",\n      `profiles/?userId=${userId}`,\n      \"api\"\n    );\n    localStorage.setItem(\"userId\", userId);\n    if (profile) {\n      localStorage.setItem(\"dbId\", profile._id);\n      localStorage.setItem(\"user\", JSON.stringify(profile));\n      return profile;\n    }\n    return null;\n  }\n\n  showImage(url) {\n    console.log(url);\n    connect.send(\"VKWebAppShowImages\", {\n      images: [url]\n    });\n  }\n}\n","// Api Calls\nimport MovieService from \"../services/movieService\";\nimport UserService from \"../services/userService\";\n\nconst movieService = new MovieService();\nconst userService = new UserService();\n\nexport const prefetchData = async () => {\n  const user = await userService.getUserFromVk();\n\n  return {\n    user\n  };\n};\n\nexport const fetchMovies = async () => {\n  try {\n    const movies = await movieService.fetchMovies();\n    return movies;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const handleLike = async movieId => {\n  try {\n    const like = await userService.like(movieId);\n    return like;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const checkIsFav = async movieId => {\n  try {\n    const isFav = await userService.checkIsFav(movieId);\n    return isFav;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const showImage = img => userService.showImage(img);\n","import React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport \"./WhatToWatch.css\";\n\nconst WhatToWatchButton = ({ onFindMovie, moving }) => {\n  const [state, setState] = useState({\n    processing: false\n  });\n\n  const animate = () => {\n    setState({\n      processing: true\n    });\n    onFindMovie();\n  };\n\n  return (\n    <div className=\"movie-block\">\n      <div className=\"movie-button\">\n        <button\n          className={cx({\n            button: true,\n            processing: state.processing,\n            \"element-move-top\": moving\n          })}\n          onClick={animate}\n        >\n          <span>Что глянуть?</span>\n          <svg viewBox=\"0 0 15 13\">\n            <polyline points=\"2 6.5 6 10.5 13 2.5\"></polyline>\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default WhatToWatchButton;\n","import React from \"react\";\nimport WhatToWatch from \"./../components/WhatToWatch/WhatToWatch\";\nimport \"./Welcome.css\";\n\nconst WelcomePanel = ({ onFindMovie, movie }) => (\n  <div className=\"welcome_panel\">\n    <WhatToWatch onFindMovie={onFindMovie} movie={movie} />\n  </div>\n);\n\nexport default WelcomePanel;\n","import React from \"react\";\nimport { Button } from \"@vkontakte/vkui\";\nimport Icon24ShareExternal from \"@vkontakte/icons/dist/24/share_external\";\nimport Icon16LikeOutline from \"@vkontakte/icons/dist/16/like_outline\";\nimport Icon16Like from \"@vkontakte/icons/dist/16/like\";\nimport Icon28FavoriteOutline from \"@vkontakte/icons/dist/28/favorite_outline\";\n\nimport \"./Movie.css\";\n\nconst MovieView = ({\n  movie: {\n    Title,\n    Poster,\n    Plot,\n    Actors,\n    Rated,\n    Runtime,\n    Genre,\n    imdbRating,\n    isFavorite,\n    _id\n  },\n  goBack,\n  onLike,\n  showImage\n}) => {\n  return (\n    <div className=\"wrap\">\n      <div className=\"cellphone-container\">\n        <div className=\"movie\">\n          <div\n            onClick={() => showImage(Poster)}\n            className=\"movie-img\"\n            style={{\n              backgroundImage: `url(${Poster})`,\n              backgroundSize: \"cover\"\n            }}\n          ></div>\n          <div className=\"text-movie-cont\">\n            <div className=\"mr-grid\">\n              <div className=\"col1\">\n                <h2 className=\"title\">{Title}</h2>\n                <ul className=\"movie-gen\">\n                  <li>{Rated} /</li>\n                  <li>{Runtime} /</li>\n                  <li>{Genre}</li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"mr-grid summary-row\">\n              <div className=\"col2\">\n                <h3>Описание:</h3>\n              </div>\n              <div className=\"col2\">\n                <div className=\"movie-likes\">\n                  <Icon28FavoriteOutline width={20} height={20} />\n                  <span>{imdbRating}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"mr-grid\">\n              <div className=\"col1\">\n                <p className=\"movie-description\">{Plot}</p>\n              </div>\n            </div>\n            <div className=\"mr-grid actors-row\">\n              <div className=\"col1\">\n                <p className=\"movie-actors\">{Actors.split(\"...\")[0]}</p>\n              </div>\n            </div>\n            <div className=\"mr-grid action-row\">\n              <div className=\"col6 action-btn\">\n                {!isFavorite ? (\n                  <Icon16LikeOutline\n                    width={30}\n                    height={30}\n                    style={{ color: \"#fe4141\" }}\n                    onClick={() => onLike(_id)}\n                  />\n                ) : (\n                  <Icon16Like\n                    width={30}\n                    height={30}\n                    style={{ color: \"#fe4141\" }}\n                    onClick={() => onLike(_id)}\n                  />\n                )}\n              </div>\n              <div className=\"col6 action-btn\">\n                <Icon24ShareExternal\n                  width={30}\n                  height={30}\n                  style={{ color: \"#fe4141\" }}\n                />\n              </div>\n            </div>\n            <div className=\"back-btn\">\n              <Button size=\"xl\" level=\"outline\" onClick={goBack}>\n                Назад\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieView;\n","import React, { useState, useEffect } from \"react\";\nimport { View, Root, Panel } from \"@vkontakte/vkui\";\nimport {\n  prefetchData,\n  handleLike,\n  fetchMovies,\n  checkIsFav,\n  showImage\n} from \"./utils/prefetchData\";\nimport Welcome from \"./panels/Welcome\";\nimport MovieCard from \"./panels/Movie\";\n\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport \"./styles/global.css\";\n\nconst App = () => {\n  const [activeView, setActiveView] = useState(\"welcome\");\n  const [vkUser, setUser] = useState(null);\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const prefetch = async () => {\n      const { user } = await prefetchData();\n      setUser(user);\n    };\n    prefetch();\n  }, []);\n\n  const handleFindMovie = async () => {\n    const movies = await fetchMovies();\n    const randomMovieId = Math.floor(Math.random() * movies.length);\n    const randomMovie = movies[randomMovieId];\n    const isFavorite = await checkIsFav(randomMovie._id);\n    setMovie({\n      ...randomMovie,\n      isFavorite\n    });\n    setTimeout(() => {\n      setActiveView(\"movie\");\n    }, 3000);\n  };\n\n  const likeHandler = async movieId => {\n    await handleLike(movieId);\n    setMovie({\n      ...movie,\n      isFavorite: true\n    });\n  };\n\n  return (\n    <Root activeView={activeView}>\n      <View header={false} activePanel=\"welcome_panel\" id=\"welcome\">\n        <Panel id=\"welcome_panel\">\n          <Welcome onFindMovie={handleFindMovie} />\n        </Panel>\n      </View>\n      <View header={false} activePanel=\"movie_panel\" id=\"movie\">\n        <Panel id=\"movie_panel\" style={{ backgroundColor: \"#1e1b26\" }}>\n          {movie && (\n            <MovieCard\n              movie={movie}\n              goBack={() => setActiveView(\"welcome\")}\n              showImage={showImage}\n              onLike={likeHandler}\n            />\n          )}\n        </Panel>\n      </View>\n    </Root>\n  );\n};\n\nexport default App;\n\n// <Home id=\"home\" fetchedUser={fetchedUser} movies={movies} posts={posts} />\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport connect from \"@vkontakte/vk-connect\";\nimport App from \"./App\";\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send(\"VKWebAppInit\", {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}