{"version":3,"sources":["utils/request.js","services/movieService.js","services/postService.js","services/userService.js","utils/prefetchData.js","components/WhatToWatch/WhatToWatch.jsx","panels/Welcome.js","panels/Movie.js","App.js","index.js"],"names":["urls","movies","api","omdb","request","method","url","endpoint","a","async","params","computedUrl","axios","data","MovieService","BlogService","connect","subscribe","userProfile","localStorage","getItem","JSON","parse","sendPromise","user","setItem","stringify","pick","userId","id","setUser","prefetchData","movieService","blogService","userService","UserService","fetchMovies","fetchPosts","posts","getUserFromVk","WhatToWatchButton","onFindMovie","moving","useState","processing","state","setState","className","cx","button","onClick","viewBox","points","WelcomePanel","movie","MovieView","Title","Poster","Plot","Actors","Rated","Runtime","Genre","imdbRating","goBack","style","backgroundImage","backgroundSize","width","height","split","color","size","level","App","activeView","setActiveView","setMovie","useEffect","console","log","prefetch","header","activePanel","Welcome","randomMovie","Math","floor","random","length","setTimeout","backgroundColor","send","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7edb6824.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst urls = {\n  movies: \"https://api.themoviedb.org\",\n  api: \"https://movie.incodewetrust.dev\",\n  omdb: \"https://www.omdbapi.com\"\n};\n\n// http://www.omdbapi.com/?i=tt3896198&apikey=f5f111a3\n\n// const API_KEY = \"ca7b0635ffccf1dfb0cd5e2673609810\";\nconst API_KEY = \"f5f111a3\";\nexport const request = async (method, url, endpoint, params = {}) => {\n  try {\n    const computedUrl = endpoint === \"omdb\" ? `${url}&apikey=${API_KEY}` : url;\n    const { data } = await axios({\n      url: `${urls[endpoint]}/${computedUrl}`,\n      method,\n      data: params\n    });\n    return data;\n  } catch (err) {\n    return err;\n  }\n};\n","import { request } from \"./../utils/request\";\n\nexport default class MovieService {\n  async fetchMovies() {\n    try {\n      const data = await request(\"get\", \"movies\", \"api\", {});\n      return data;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n","import { request } from \"./../utils/request\";\n\nexport default class BlogService {\n  async fetchPosts() {\n    try {\n      const data = await request(\"get\", \"posts\", \"api\");\n      return data;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n","import { request } from \"./../utils/request\";\nimport { omit, pick } from \"ramda\";\nimport connect from \"@vkontakte/vk-connect\";\nconnect.subscribe(() => {});\n\nexport default class BlogService {\n  async getUserFromVk() {\n    try {\n      const userProfile = localStorage.getItem(\"user\");\n      if (userProfile) {\n        return JSON.parse(userProfile);\n      }\n\n      const user = await connect.sendPromise(\"VKWebAppGetUserInfo\");\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      const setUser = await request(\"post\", \"profiles\", \"api\", {\n        ...pick([\"photo_max_orig\", \"first_name\", \"last_name\"], user),\n        userId: user.id\n      });\n      return setUser;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  asycn;\n}\n","// Api Calls\nimport MovieService from \"../services/movieService\";\nimport BlogService from \"../services/postService\";\nimport UserService from \"../services/userService\";\n\nexport const prefetchData = async () => {\n  const movieService = new MovieService();\n  const blogService = new BlogService();\n  const userService = new UserService();\n  const movies = await movieService.fetchMovies();\n  const posts = await blogService.fetchPosts();\n  const user = await userService.getUserFromVk();\n\n  return {\n    movies,\n    user,\n    posts\n  };\n};\n","import React, { useState } from \"react\";\nimport cx from \"classnames\";\nimport \"./WhatToWatch.css\";\n\nconst WhatToWatchButton = ({ onFindMovie, moving }) => {\n  const [state, setState] = useState({\n    processing: false\n  });\n\n  const animate = () => {\n    setState({\n      processing: true\n    });\n    onFindMovie();\n  };\n\n  return (\n    <div className=\"movie-block\">\n      <div className=\"movie-button\">\n        <button\n          className={cx({\n            button: true,\n            processing: state.processing,\n            \"element-move-top\": moving\n          })}\n          onClick={animate}\n        >\n          <span>Что глянуть?</span>\n          <svg viewBox=\"0 0 15 13\">\n            <polyline points=\"2 6.5 6 10.5 13 2.5\"></polyline>\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default WhatToWatchButton;\n","import React from \"react\";\nimport WhatToWatch from \"./../components/WhatToWatch/WhatToWatch\";\nimport \"./styles.css\";\n\nconst WelcomePanel = ({ onFindMovie, movie }) => (\n  <div className=\"welcome_panel\">\n    <WhatToWatch onFindMovie={onFindMovie} movie={movie} />\n  </div>\n);\n\nexport default WelcomePanel;\n","import React from \"react\";\nimport { Button } from \"@vkontakte/vkui\";\nimport Icon24ShareExternal from \"@vkontakte/icons/dist/24/share_external\";\nimport Icon16LikeOutline from \"@vkontakte/icons/dist/16/like_outline\";\nimport Icon24CommentOutline from \"@vkontakte/icons/dist/24/comment_outline\";\nimport Icon28FavoriteOutline from \"@vkontakte/icons/dist/28/favorite_outline\";\n\nimport \"./Movie.css\";\n\nconst MovieView = ({\n  movie: { Title, Poster, Plot, Actors, Rated, Runtime, Genre, imdbRating },\n  goBack\n}) => {\n  return (\n    <div className=\"wrap\">\n      <div className=\"cellphone-container\">\n        <div className=\"movie\">\n          <div\n            className=\"movie-img\"\n            style={{\n              backgroundImage: `url(${Poster})`,\n              backgroundSize: \"cover\"\n            }}\n          ></div>\n          <div className=\"text-movie-cont\">\n            <div className=\"mr-grid\">\n              <div className=\"col1\">\n                <h2 className=\"title\">{Title}</h2>\n                <ul className=\"movie-gen\">\n                  <li>{Rated} /</li>\n                  <li>{Runtime} /</li>\n                  <li>{Genre}</li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"mr-grid summary-row\">\n              <div className=\"col2\">\n                <h3>Описание:</h3>\n              </div>\n              <div className=\"col2\">\n                <div className=\"movie-likes\">\n                  <Icon28FavoriteOutline width={20} height={20} />\n                  <span>{imdbRating}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"mr-grid\">\n              <div className=\"col1\">\n                <p className=\"movie-description\">{Plot}</p>\n              </div>\n            </div>\n            <div className=\"mr-grid actors-row\">\n              <div className=\"col1\">\n                <p className=\"movie-actors\">{Actors.split(\"...\")[0]}</p>\n              </div>\n            </div>\n            <div className=\"mr-grid action-row\">\n              <div className=\"col6 action-btn\">\n                <Icon24CommentOutline\n                  width={30}\n                  height={30}\n                  style={{ color: \"#fe4141\" }}\n                />\n              </div>\n              <div className=\"col6 action-btn\">\n                <Icon16LikeOutline\n                  width={30}\n                  height={30}\n                  style={{ color: \"#fe4141\" }}\n                />\n              </div>\n              <div className=\"col6 action-btn\">\n                <Icon24ShareExternal\n                  width={30}\n                  height={30}\n                  style={{ color: \"#fe4141\" }}\n                />\n              </div>\n            </div>\n            <div className=\"back-btn\">\n              <Button size=\"xl\" level=\"outline\" onClick={goBack}>\n                Назад\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieView;\n","import React, { useState, useEffect } from \"react\";\nimport { View, Root, Panel } from \"@vkontakte/vkui\";\nimport { prefetchData } from \"./utils/prefetchData\";\nimport Welcome from \"./panels/Welcome\";\nimport MovieCard from \"./panels/Movie\";\n\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport \"./styles/global.css\";\n\nconst App = () => {\n  const [activeView, setActiveView] = useState(\"welcome\");\n  const [vkUser, setUser] = useState(null);\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const prefetch = async () => {\n      const { user } = await prefetchData();\n      console.log(user);\n      setUser(user);\n    };\n    prefetch();\n  }, []);\n\n  const handleFindMovie = async () => {\n    const { movies } = await prefetchData();\n    const randomMovie = Math.floor(Math.random() * movies.length);\n    setMovie(movies[randomMovie]);\n    setTimeout(() => {\n      setActiveView(\"movie\");\n    }, 3000);\n  };\n\n  return (\n    <Root activeView={activeView}>\n      <View header={false} activePanel=\"welcome_panel\" id=\"welcome\">\n        <Panel id=\"welcome_panel\">\n          <Welcome onFindMovie={handleFindMovie} />\n        </Panel>\n      </View>\n      <View header={false} activePanel=\"movie_panel\" id=\"movie\">\n        <Panel id=\"movie_panel\" style={{ backgroundColor: \"#1e1b26\" }}>\n          {movie && (\n            <MovieCard movie={movie} goBack={() => setActiveView(\"welcome\")} />\n          )}\n        </Panel>\n      </View>\n    </Root>\n  );\n};\n\nexport default App;\n\n// <Home id=\"home\" fetchedUser={fetchedUser} movies={movies} posts={posts} />\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport connect from \"@vkontakte/vk-connect\";\nimport App from \"./App\";\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send(\"VKWebAppInit\", {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}